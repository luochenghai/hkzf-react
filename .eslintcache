[{"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Index\\index.js":"1","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\utils\\http.js":"2","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\index.js":"3","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Profile\\index.js":"4","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Index\\api.js":"5","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\index.js":"6","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Home\\index.js":"7","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Map\\index.js":"8","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\App.js":"9","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Citylist\\index.js":"10","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\utils\\getCurrentCity.js":"11","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\utils\\lsCity.js":"12","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\reportWebVitals.js":"13","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\Filter\\index.js":"14","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\FilterPicker\\index.js":"15","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\FilterTitle\\index.js":"16","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\FilterMore\\index.js":"17","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\components\\FilterFooter\\index.js":"18","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\Filter\\api.js":"19"},{"size":7397,"mtime":1610778593121,"results":"20","hashOfConfig":"21"},{"size":631,"mtime":1610380262796,"results":"22","hashOfConfig":"21"},{"size":374,"mtime":1610336917593,"results":"23","hashOfConfig":"21"},{"size":252,"mtime":1610338180052,"results":"24","hashOfConfig":"21"},{"size":868,"mtime":1610768663261,"results":"25","hashOfConfig":"21"},{"size":343,"mtime":1610901330673,"results":"26","hashOfConfig":"21"},{"size":2601,"mtime":1610553145170,"results":"27","hashOfConfig":"21"},{"size":894,"mtime":1610543964995,"results":"28","hashOfConfig":"21"},{"size":950,"mtime":1610553687155,"results":"29","hashOfConfig":"21"},{"size":3851,"mtime":1610893091590,"results":"30","hashOfConfig":"21"},{"size":1574,"mtime":1610781417580,"results":"31","hashOfConfig":"21"},{"size":297,"mtime":1610781289026,"results":"32","hashOfConfig":"21"},{"size":362,"mtime":1610188891904,"results":"33","hashOfConfig":"21"},{"size":3941,"mtime":1611043633177,"results":"34","hashOfConfig":"21"},{"size":1385,"mtime":1611043537504,"results":"35","hashOfConfig":"21"},{"size":1097,"mtime":1610978220323,"results":"36","hashOfConfig":"21"},{"size":1267,"mtime":1566054708000,"results":"37","hashOfConfig":"21"},{"size":759,"mtime":1610980078729,"results":"38","hashOfConfig":"21"},{"size":188,"mtime":1610983992119,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"i3bvix",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Index\\index.js",["82"],"import React from 'react';\r\nimport { Carousel ,Flex , Grid, WingBlank ,NavBar} from 'antd-mobile';\r\nimport { getSwiper ,getGroups ,getNews,getAreaInfo} from './api.js'\r\nimport './index.scss'\r\n// withRouter 引入这个高阶组件是为了使index组件导出后的props有值\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getCurrentCity } from \"../../utils/getCurrentCity.js\";\r\n// 引入图片\r\nimport  Nav1  from \"../../assets/images/nav-1.png\";\r\nimport  Nav2  from \"../../assets/images/nav-2.png\";\r\nimport  Nav3  from \"../../assets/images/nav-3.png\";\r\nimport  Nav4  from \"../../assets/images/nav-4.png\";\r\n// 通过Home 中的三个Link导航切换三个组件的显示与隐藏\r\nconst BaseURL = `http://localhost:8080`;\r\n// 获取当前城市\r\n// const {BMap} = window;\r\nconst nav = [\r\n  {\r\n    img: Nav1,\r\n    title: '整租',\r\n    path: '/home/list',\r\n    id:0\r\n  },\r\n  {\r\n    img: Nav2,\r\n    title: '合租',\r\n    path:'/home/list',\r\n    id:1\r\n  },\r\n  {\r\n    img: Nav3,\r\n    title: '地图找房',\r\n    path: '/map',\r\n    id:2\r\n  },\r\n  {\r\n    img: Nav4,\r\n    title: '去出租',\r\n    path: '/login',\r\n    id:3\r\n  }\r\n]\r\nclass Index extends React.Component { \r\n    state = {\r\n      swiperData: [],\r\n      groupsData: [],\r\n      newsData: [],\r\n      imgHeight: 176,\r\n      loadFinshed: false , // 数据驱动视图，解决轮播图bug\r\n     // currentCityName:'北京市'\r\n     cityInfo:{\r\n       name:'北京',\r\n       value:'%E5%8C%97%E4%BA%AC'\r\n\r\n     }\r\n      }\r\n     componentDidMount() {\r\n       this.loadSwiper();\r\n       this.loadGroups();\r\n       this.loadNews();\r\n      // cb版本\r\n      //  getCurrentCity(({label,value})=>{\r\n      //   this.setState(()=>{\r\n      //   return {cityInfo:{...this.state.cityInfo,label,value}}\r\n      // })\r\n      //  });\r\n\r\n      // promise版本\r\n      getCurrentCity().then(res=>{\r\n        const {label,value } = res;\r\n         this.setState(()=>{\r\n            return {cityInfo:{...this.state.cityInfo,label,value}}\r\n          })\r\n      })\r\n    }\r\n  // 获取轮播图数据的方法\r\n  loadSwiper = async () => { \r\n        const { data } = await getSwiper();\r\n      //  console.log(data)\r\n        const { status, body } = data;\r\n        if (status === 200) { \r\n          // 数据获取成功后，在回调函数中改变loadFinshed 的状态\r\n          this.setState(() => { \r\n            return { swiperData: body }\r\n          },\r\n            () => {\r\n            this.setState(() =>{\r\n              return {loadFinshed: true }\r\n            })\r\n         })\r\n        }\r\n  }\r\n      \r\n        //获取租房小组的数据\r\n  loadGroups = async () => { \r\n          const { data } = await getGroups();\r\n          console.log('data',data)\r\n          const { status, body } = data;\r\n          if (status === 200) { \r\n            this.setState(() => { \r\n              return { groupsData: body }\r\n            })\r\n          }\r\n      }\r\n //获取租房小组的数据\r\n  loadNews = async () => { \r\n        const { data } = await getNews();\r\n        //console.log('data',data)\r\n        const { status, body } = data;\r\n        if (status === 200) { \r\n          this.setState(() => { \r\n            return { newsData: body }\r\n          })\r\n        }\r\n    }\r\n  // 轮播图方法\r\n  renderSwiper = () => { \r\n    const { swiperData } = this.state;\r\n    return swiperData.map(item => (\r\n      <a\r\n        key={item.id}\r\n        href=\"http://www.itcast.com\"\r\n        style={{ display: 'inline-block', width: '100%', height: this.state.imgHeight }}\r\n        >\r\n        <img\r\n            src={`${BaseURL}${item.imgSrc}`}\r\n            alt=\"\"\r\n            style={{ width: '100%', verticalAlign: 'top' }}\r\n            onLoad={() => {\r\n            // 图片自适应\r\n            window.dispatchEvent(new Event('resize'));\r\n            this.setState({ imgHeight: 'auto' });\r\n            }}\r\n        />\r\n      </a>\r\n  ))\r\n  }\r\n    // 导航\r\n  renderNav = () =>{\r\n    // 第一层return 返回的是一个数组\r\n    return nav.map((item) => { \r\n        // 第二层return 返回的是一个react 元素\r\n      return <Flex.Item\r\n              className=\"nav\"\r\n              key={item.id}\r\n              onClick={() => { this.props.history.push(item.path)}} >\r\n                <img src={item.img} alt=\"图片无法显示\" />\r\n                <p>{ item.title}</p>\r\n            </Flex.Item>\r\n      })\r\n  }\r\n  // 租房小组\r\n  renderGrid = () => { \r\n    const { groupsData } = this.state;\r\n  return <Grid\r\n      data={groupsData}\r\n      columnNum={2}\r\n      square={false}\r\n      activeStyle\r\n      hasLine={ false}\r\n      renderItem={(item) => { \r\n        return (\r\n          <Flex className=\"grid-item\" justify=\"between\">\r\n            <div className=\"grid-item\">\r\n                <h3>{ item.title}</h3>\r\n                <p>{ item.desc}</p>\r\n            </div>\r\n            <img src={`${BaseURL}${item.imgSrc}`} alt=\"\"/>\r\n          </Flex>\r\n      )\r\n    }\r\n          \r\n    }\r\n  />\r\n  }\r\n\r\n  // 最新资讯\r\n  renderNews = () => { \r\n    const { newsData } = this.state;\r\n    return newsData.map(item => { \r\n      return <div className=\"news-item\" key={item.id}>\r\n       {/* 左侧图片 */}\r\n       <div className=\"imgwrap\">\r\n          <img\r\n            className=\"img\"\r\n            src={`${BaseURL}${item.imgSrc}`}\r\n            alt=\"\"\r\n          />\r\n       </div>\r\n       <Flex className=\"content\" direction=\"column\" justify=\"between\">\r\n         <h3 className=\"title\">{item.title}</h3>\r\n         <Flex className=\"info\" justify=\"between\">\r\n           <span>{ item.from}</span>\r\n           <span>{ item.date}</span>\r\n          </Flex>\r\n       </Flex>\r\n     </div>\r\n    })\r\n  }\r\n\r\n// 原来将获取当前城市的方法写在index里，因为在点击城市后，所有城市列表也会用到当前城市 所以抽离成公共的方法 在utils\r\n  // getCurrentCity = ()=>{\r\n  //   const myCity = new BMap.LocalCity();\r\n  //   const myFun = async result=>{\r\n  //     const cityName = result.name;\r\n  //     // 通过接口查询城市\r\n  //     const {data} = await getAreaInfo(cityName);\r\n  //     const {body:{label,value}} =  data;\r\n  //     // console.log('data',data)\r\n  //     // console.log(\"当前定位城市:\"+cityName);\r\n  //     this.setState(()=>{\r\n  //       // return {currentCityName:body.label}\r\n  //       return {cityInfo:{...this.state.cityInfo,label,value}}\r\n  //     })\r\n  //   }\r\n  //   myCity.get(myFun); \r\n  // }\r\n  render() { \r\n    const { loadFinshed ,cityInfo} = this.state;\r\n      return <div>\r\n        <NavBar mode=\"dark\" icon={cityInfo.label} onLeftClick={() => {this.props.history.push('/citylist')}}>首页</NavBar>\r\n                  \r\n        {/* 轮播图 */}\r\n        <Carousel autoplay={loadFinshed} infinite>\r\n          { this.renderSwiper()}\r\n        </Carousel>\r\n          \r\n        {/* 宫格菜单 */}\r\n        <Flex>\r\n           {this.renderNav()} \r\n        </Flex>\r\n        {/* 租房小组+宫格菜单导航（4个） */}\r\n        <div className=\"group\">\r\n          <Flex className=\"group-title\" justify=\"between\">\r\n            <h3>租房小组</h3>\r\n            <span>更多</span>\r\n          </Flex>\r\n          { this.renderGrid()}\r\n        </div>\r\n        {/* 最新资讯 */}\r\n        <div className=\"news\">\r\n          <h3 className=\"group-title\">最新资讯</h3>\r\n          <WingBlank size=\"md\"> { this.renderNews()}</WingBlank>\r\n        </div>\r\n      </div>\r\n    }\r\n}\r\nexport default withRouter(Index)",["83","84"],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\utils\\http.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Profile\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Index\\api.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Home\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Map\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\App.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Citylist\\index.js",["85"],"import React from 'react';\r\nimport { NavBar, Icon ,Toast } from 'antd-mobile';\r\nimport {List,AutoSizer} from 'react-virtualized';\r\nimport { getAreaCity ,getHotCity} from '../Index/api.js'\r\nimport { getCurrentCity } from \"../../utils/getCurrentCity.js\";\r\nimport { setCity } from \"../../utils/lsCity.js\";\r\n\r\nimport './index.css'\r\nclass CityList extends React.Component { \r\n    // 状态数据\r\n    state = {\r\n       cityIndex:[],\r\n       citylist:{}\r\n    }\r\n componentDidMount() { this.loadCities()}\r\n    // react 长列表\r\n rowRenderer = ({ key, index, style}) =>{\r\n      const {cityIndex,citylist} = this.state;\r\n      const letter = cityIndex[index];\r\n      return (\r\n        <div key={key} style={style} className=\"city\">\r\n          <div className=\"title\"> {letter}</div>\r\n          {/* 插值表达式里可以放数组 */}\r\n          {citylist[letter].map(item=>{\r\n            return  <div className=\"name\" key={item.value} onClick={()=>{\r\n              // 筛选北京上海广州 深圳，目前这几个城市有房源数据\r\n              if (['北京','上海','深圳','广州'].includes(item.label)){\r\n                 this.props.history.push('/home');\r\n                 setCity({label:item.label,value:item.value});\r\n              } else {\r\n                Toast.info('暂无房源', 2, null, false);\r\n              }\r\n            }}>{item.label}</div>\r\n          })}\r\n         \r\n        </div>\r\n      );\r\n    }\r\n  formCityData = (data)=>{\r\n      let cityIndex =[];\r\n      let citylist ={};\r\n      data.map(item=>{\r\n        const letter = item.short.substr(0,1);\r\n        if (letter in citylist){\r\n          citylist[letter].push(item);\r\n        }else{\r\n          citylist[letter]= [item];\r\n        }\r\n      })\r\n      // cityIndex 是无序的，需要处理成有序的\r\n      cityIndex = Object.keys(citylist).sort();\r\n      // console.log('cityIndex',cityIndex)\r\n      return {cityIndex,citylist}\r\n    }\r\n\r\n\r\n  loadCities = async () => { \r\n      const { data } = await getAreaCity();\r\n      // 获取热门城市\r\n      const { data:hotData } = await getHotCity();\r\n      const { status, body } = data;\r\n  \r\n      if (status === 200) { \r\n        // 处理后台返回的数据\r\n        const {cityIndex,citylist} = this.formCityData(body);\r\n        // 在原来的数据的基础上增加热门城市\r\n        cityIndex.unshift('热门城市');\r\n        citylist['热门城市'] = hotData.body;\r\n        // 当前城市\r\n        getCurrentCity().then(res=>{\r\n          const {label,value} =res;\r\n          cityIndex.unshift('当前城市');\r\n          citylist['当前城市'] = [{label,value}];\r\n          this.setState(()=>{\r\n            return {...this.state,cityIndex,citylist}\r\n          })\r\n        })\r\n       \r\n      //  console.log(citylist,cityIndex)\r\n      }\r\n     \r\n  }\r\n  // 计算行高\r\n  calHeight = ({index})=>{\r\n    const {cityIndex,citylist} = this.state;\r\n    const letter = cityIndex[index];\r\n    return 36+50*citylist[letter].length;\r\n  }\r\n\r\n  render() {\r\n    const {cityIndex} = this.state;\r\n        return (<div className=\"citylist\">\r\n            <NavBar\r\n                className=\"navbar\"\r\n                mode=\"light\"\r\n                icon={<Icon type=\"left\" />}\r\n                onLeftClick={() => {this.props.history.goBack()}}\r\n              >选择城市</NavBar>\r\n              {/* 长列表 */}\r\n              {/* AutoSizer 其实就是一HOC 高阶组件 */}\r\n              <AutoSizer>\r\n                {({height, width}) => (\r\n                  <List\r\n                    width={width}\r\n                    height={height}\r\n                    rowCount={cityIndex.length}  \r\n                    rowHeight={this.calHeight}\r\n                    rowRenderer={this.rowRenderer}\r\n                  />\r\n                  )}\r\n                 </AutoSizer>\r\n        </div>)\r\n     }\r\n}\r\nexport default CityList","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\utils\\getCurrentCity.js",["86"],"\r\nimport { getAreaInfo } from '../pages/Index/api'\r\nimport { setCity,getCity,removeCity } from \"../utils/lsCity.js\";\r\nconst {BMap} = window;\r\n// callback版本\r\n// export const getCurrentCity = (cb)=>{\r\n//     const myCity = new BMap.LocalCity();\r\n//     const myFun = async result=>{\r\n//     const cityName = result.name;\r\n//     // 通过接口查询城市\r\n//     const {data} = await getAreaInfo(cityName);\r\n//     const {body:{label,value}} =  data;\r\n//     // 以下是修改状态，抽离出去，这里之对外提供数据\r\n//     //   this.setState(()=>{\r\n//     //     // return {currentCityName:body.label}\r\n//     //     return {cityInfo:{...this.state.cityInfo,label,value}}\r\n//     //   })\r\n//     cb({label,value});\r\n//      }\r\n//     myCity.get(myFun); \r\n//   }\r\n  \r\n// promise 版本\r\nexport const getCurrentCity = ()=>{\r\n // 本地缓存\r\n const currCity =  getCity('curr_city')\r\n if (!currCity){\r\n    return new Promise(resolve=>{\r\n        const myCity = new BMap.LocalCity();\r\n        const myFun = async result=>{\r\n        const cityName = result.name;\r\n        // 通过接口查询城市\r\n        const {data} = await getAreaInfo(cityName);\r\n        const {body:{label,value}} =  data;\r\n        // 存\r\n        setCity({label,value})\r\n         // resolve 里的参数在then中通过形参可以获取\r\n          resolve({label,value})\r\n         }  \r\n         myCity.get(myFun); \r\n       })\r\n }else{\r\n    // return new Promise(resolve=>{\r\n    //     resolve(currCity)\r\n    // })\r\n   // 上下等价\r\n    return Promise.resolve(currCity)\r\n\r\n }\r\n\r\n  }","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\utils\\lsCity.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\Filter\\index.js",["87"],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\FilterPicker\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\FilterTitle\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\FilterMore\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\components\\FilterFooter\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\components\\Filter\\api.js",[],{"ruleId":"88","severity":1,"message":"89","line":3,"column":40,"nodeType":"90","messageId":"91","endLine":3,"endColumn":51},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":42,"column":20,"nodeType":"98","messageId":"99","endLine":42,"endColumn":22},{"ruleId":"88","severity":1,"message":"100","line":3,"column":26,"nodeType":"90","messageId":"91","endLine":3,"endColumn":36},{"ruleId":"88","severity":1,"message":"101","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":18},"no-unused-vars","'getAreaInfo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'removeCity' is defined but never used.","'FilterMore' is defined but never used.","no-global-assign","no-unsafe-negation"]