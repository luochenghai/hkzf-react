[{"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Index\\index.js":"1","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\utils\\http.js":"2","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\index.js":"3","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Profile\\index.js":"4","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Index\\api.js":"5","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\index.js":"6"},{"size":4542,"mtime":1610467811777,"results":"7","hashOfConfig":"8"},{"size":631,"mtime":1610380262796,"results":"9","hashOfConfig":"8"},{"size":374,"mtime":1610336917593,"results":"10","hashOfConfig":"8"},{"size":252,"mtime":1610338180052,"results":"11","hashOfConfig":"8"},{"size":291,"mtime":1610463745000,"results":"12","hashOfConfig":"8"},{"size":256,"mtime":1610338176194,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1hg5xxx",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Index\\index.js",["27"],"import React from 'react';\r\nimport { Carousel ,Flex , Grid } from 'antd-mobile';\r\nimport { getSwiper ,getGroups} from './api.js'\r\nimport './index.scss'\r\n// withRouter 引入这个高阶组件是为了使index组件导出后的props有值\r\nimport { withRouter } from \"react-router-dom\";\r\n// 引入图片\r\nimport  Nav1  from \"../../assets/images/nav-1.png\";\r\nimport  Nav2  from \"../../assets/images/nav-2.png\";\r\nimport  Nav3  from \"../../assets/images/nav-3.png\";\r\nimport  Nav4  from \"../../assets/images/nav-4.png\";\r\n// 通过Home 中的三个Link导航切换三个组件的显示与隐藏\r\nconst BaseURL = `http://localhost:8080`\r\nconst nav = [\r\n  {\r\n    img: Nav1,\r\n    title: '整租',\r\n    path: '/home/list',\r\n    id:0\r\n  },\r\n  {\r\n    img: Nav2,\r\n    title: '合租',\r\n    path:'/home/list',\r\n    id:1\r\n  },\r\n  {\r\n    img: Nav3,\r\n    title: '地图找房',\r\n    path: '/map',\r\n    id:2\r\n  },\r\n  {\r\n    img: Nav4,\r\n    title: '去出租',\r\n    path: '/login',\r\n    id:3\r\n  }\r\n]\r\nclass Index extends React.Component { \r\n    state = {\r\n      swiperData: [],\r\n      groupsData: [],\r\n      imgHeight: 176,\r\n      loadFinshed: false  // 数据驱动视图，解决轮播图bug\r\n      }\r\n     componentDidMount() {\r\n       this.loadSwiper();\r\n       this.loadGroups();\r\n     }\r\n      // 获取轮播图数据的方法\r\n      loadSwiper = async () => { \r\n        const { data } = await getSwiper();\r\n      //  console.log(data)\r\n        const { status, body } = data;\r\n        if (status === 200) { \r\n          // 数据获取成功后，在回调函数中改变loadFinshed 的状态\r\n          this.setState(() => { \r\n            return { swiperData: body }\r\n          },\r\n            () => {\r\n            this.setState(() =>{\r\n              return {loadFinshed: true }\r\n            })\r\n         })\r\n        }\r\n  }\r\n  \r\n    //获取租房小组的数据\r\n    loadGroups = async () => { \r\n      const { data } = await getGroups();\r\n      console.log('data',data)\r\n      const { status, body } = data;\r\n      if (status === 200) { \r\n        this.setState(() => { \r\n          return { groupsData: body }\r\n        })\r\n      }\r\n  }\r\n  // 轮播图方法\r\n  renderSwiper = () => { \r\n    const { swiperData } = this.state;\r\n    return swiperData.map(item => (\r\n      <a\r\n        key={item.id}\r\n        href=\"http://www.itcast.com\"\r\n        style={{ display: 'inline-block', width: '100%', height: this.state.imgHeight }}\r\n        >\r\n        <img\r\n            src={`${BaseURL}${item.imgSrc}`}\r\n            alt=\"\"\r\n            style={{ width: '100%', verticalAlign: 'top' }}\r\n            onLoad={() => {\r\n            // 图片自适应\r\n            window.dispatchEvent(new Event('resize'));\r\n            this.setState({ imgHeight: 'auto' });\r\n            }}\r\n        />\r\n      </a>\r\n  ))\r\n  }\r\n    // 导航\r\n  renderNav = () =>{\r\n    // 第一层return 返回的是一个数组\r\n    return nav.map((item) => { \r\n        // 第二层return 返回的是一个react 元素\r\n      return <Flex.Item\r\n              className=\"nav\"\r\n              key={item.id}\r\n              onClick={() => { this.props.history.push(item.path)}} >\r\n                <img src={item.img} alt=\"图片无法显示\" />\r\n                <p>{ item.title}</p>\r\n            </Flex.Item>\r\n      })\r\n  }\r\n  // 租房小组\r\n  renderGrid = () => { \r\n    const { groupsData } = this.state;\r\n  return <Grid\r\n      data={groupsData}\r\n      columnNum={2}\r\n      square={false}\r\n      activeStyle\r\n      hasLine={ false}\r\n      renderItem={(item) => { \r\n        return (\r\n          <Flex className=\"grid-item\" justify=\"between\">\r\n            <div className=\"grid-item\">\r\n                <h3>{ item.title}</h3>\r\n                <p>{ item.desc}</p>\r\n            </div>\r\n            <img src={`${BaseURL}${item.imgSrc}`}/>\r\n          </Flex>\r\n      )\r\n    }\r\n          \r\n    }\r\n  />\r\n  }\r\n  render() { \r\n    const { loadFinshed } = this.state;\r\n      return <div>\r\n        {/* 轮播图 */}\r\n            <Carousel autoplay={loadFinshed} infinite>\r\n              { this.renderSwiper()}\r\n            </Carousel>\r\n          \r\n        {/* 宫格菜单 */}\r\n        <Flex>\r\n           {this.renderNav()} \r\n        </Flex>\r\n        {/* 租房小组+宫格菜单导航（4个） */}\r\n        <div className=\"group\">\r\n          <Flex className=\"group-title\" justify=\"between\">\r\n            <h3>租房小组</h3>\r\n            <span>更多</span>\r\n          </Flex>\r\n          { this.renderGrid()}\r\n        </div>\r\n            {/* 最新资讯 */}\r\n      </div>\r\n    }\r\n}\r\nexport default withRouter(Index)","C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\utils\\http.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Profile\\index.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\Index\\api.js",[],"C:\\Users\\Administrator\\Desktop\\hkzfCode\\hkzf\\src\\pages\\HouseList\\index.js",[],{"ruleId":"28","severity":1,"message":"29","line":132,"column":13,"nodeType":"30","endLine":132,"endColumn":52},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]